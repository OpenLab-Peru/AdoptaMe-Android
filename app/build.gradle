apply plugin: 'com.android.application'

apply plugin: 'kotlin-android'

apply plugin: 'kotlin-kapt'

apply plugin: 'kotlin-android-extensions'

android {

    def globalConfiguration = rootProject.extensions.getByName("ext")

    compileSdkVersion globalConfiguration["targetSdkVersion"]
    defaultConfig {
        applicationId "com.josemiz.adoptame"
        minSdkVersion globalConfiguration["minSdkVersion"]
        targetSdkVersion globalConfiguration["targetSdkVersion"]
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }
    android {
        sourceSets {
            String sharedTestDir = 'src/sharedTest/java'
            test {
                java.srcDir sharedTestDir
            }
            androidTest {
                java.srcDir sharedTestDir
            }
        }
    }

    buildTypes {
        debug {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            testProguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguardTest-rules.pro'
        }

        release {
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            testProguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguardTest-rules.pro'
        }
    }

    flavorDimensions "default"

    // If you need to add more flavors, consider using flavor dimensions.
    productFlavors {
        mock {
            dimension "default"
            applicationIdSuffix = ".mock"
        }
        prod {
            dimension "default"
        }
    }

    // Remove mockRelease as it's not needed.
    android.variantFilter { variant ->
        if (variant.buildType.name == 'release'
                && variant.getFlavors().get(0).name == 'mock') {
            variant.setIgnore(true)
        }
    }

    // Always show the result of every unit test, even if it passes.
    testOptions.unitTests.all {
        testLogging {
            events 'passed', 'skipped', 'failed', 'standardOut', 'standardError'
        }
    }

    dataBinding {
        enabled = true
    }
}

dependencies {

    def appDependencies = rootProject.ext.appDependencies
    def testDependencies = rootProject.ext.testDependencies
    def androidTestDependencies = rootProject.ext.androidTestDependencies

    implementation project(':data')

    // App dependencies
    implementation appDependencies.appCompat
    implementation appDependencies.cardView
    implementation appDependencies.androidMaterial
    implementation appDependencies.recyclerView
    implementation appDependencies.annotation

    implementation appDependencies.legacySupportV4
    implementation appDependencies.espressoIdlingResource
    implementation appDependencies.guava

    //Navigation
    implementation appDependencies.navigationFragmentKtx
    implementation appDependencies.navigationUIKtx


    // Architecture Components
    implementation appDependencies.roomRuntime
    kapt appDependencies.roomCompiler
    implementation appDependencies.lifecycleExtensions
    kapt appDependencies.lifecycleCompiler

    // Dependencies for local unit tests
    testImplementation testDependencies.junit
    testImplementation testDependencies.mockitoCore
    testImplementation testDependencies.hamcrestAll
    testImplementation testDependencies.coreTesting

    // Dependencies for Android unit tests
    androidTestImplementation testDependencies.junit
    androidTestImplementation testDependencies.mockitoCore
    androidTestImplementation testDependencies.dexmakerMockito

    // Android Testing Support Library - Instrumented testing
    androidTestImplementation androidTestDependencies.androidXTestRunner
    androidTestImplementation androidTestDependencies.androidXTestRules
    androidTestImplementation androidTestDependencies.androidXRoomTesting
    androidTestImplementation androidTestDependencies.androidXEspressoCore
    androidTestImplementation androidTestDependencies.androidXEspressoContrib
    androidTestImplementation androidTestDependencies.androidXEspressoIntents
    androidTestImplementation androidTestDependencies.androidXEspressoIdlingConcurrent

    // Resolve conflicts between main and test APK:
    androidTestImplementation appDependencies.annotation
    androidTestImplementation appDependencies.legacySupportV4
    androidTestImplementation appDependencies.recyclerView
    androidTestImplementation appDependencies.appCompat
    androidTestImplementation appDependencies.androidMaterial

    // Kotlin
    implementation appDependencies.kotlin
}
